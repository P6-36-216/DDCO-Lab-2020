$date
	Sun Sep  6 19:37:06 2020
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module tb $end
$var wire 4 ! o [3:0] $end
$var wire 1 " cout $end
$var reg 1 # cin $end
$var reg 1 $ clk $end
$var reg 4 % i0 [3:0] $end
$var reg 4 & i1 [3:0] $end
$var reg 1 ' reset $end
$var integer 32 ( i [31:0] $end
$scope module u0 $end
$var wire 4 ) a [3:0] $end
$var wire 4 * b [3:0] $end
$var wire 1 # cin $end
$var wire 4 + sum [3:0] $end
$var wire 1 " cout $end
$var wire 3 , c [2:0] $end
$scope module f1 $end
$var wire 1 - a $end
$var wire 1 . b $end
$var wire 1 # cin $end
$var wire 5 / t [4:0] $end
$var wire 1 0 sum $end
$var wire 1 1 cout $end
$scope module a0 $end
$var wire 1 - i0 $end
$var wire 1 . i1 $end
$var wire 1 2 o2 $end
$upscope $end
$scope module a1 $end
$var wire 1 - i0 $end
$var wire 1 # i1 $end
$var wire 1 3 o2 $end
$upscope $end
$scope module a2 $end
$var wire 1 . i0 $end
$var wire 1 # i1 $end
$var wire 1 4 o2 $end
$upscope $end
$scope module o0 $end
$var wire 1 5 i0 $end
$var wire 1 6 i1 $end
$var wire 1 7 o3 $end
$upscope $end
$scope module o1 $end
$var wire 1 8 i0 $end
$var wire 1 9 i1 $end
$var wire 1 1 o3 $end
$upscope $end
$scope module x0 $end
$var wire 1 - i0 $end
$var wire 1 . i1 $end
$var wire 1 : o4 $end
$upscope $end
$scope module x1 $end
$var wire 1 ; i0 $end
$var wire 1 # i1 $end
$var wire 1 0 o4 $end
$upscope $end
$upscope $end
$scope module f2 $end
$var wire 1 < a $end
$var wire 1 = b $end
$var wire 1 > cin $end
$var wire 5 ? t [4:0] $end
$var wire 1 @ sum $end
$var wire 1 A cout $end
$scope module a0 $end
$var wire 1 < i0 $end
$var wire 1 = i1 $end
$var wire 1 B o2 $end
$upscope $end
$scope module a1 $end
$var wire 1 < i0 $end
$var wire 1 > i1 $end
$var wire 1 C o2 $end
$upscope $end
$scope module a2 $end
$var wire 1 = i0 $end
$var wire 1 > i1 $end
$var wire 1 D o2 $end
$upscope $end
$scope module o0 $end
$var wire 1 E i0 $end
$var wire 1 F i1 $end
$var wire 1 G o3 $end
$upscope $end
$scope module o1 $end
$var wire 1 H i0 $end
$var wire 1 I i1 $end
$var wire 1 A o3 $end
$upscope $end
$scope module x0 $end
$var wire 1 < i0 $end
$var wire 1 = i1 $end
$var wire 1 J o4 $end
$upscope $end
$scope module x1 $end
$var wire 1 K i0 $end
$var wire 1 > i1 $end
$var wire 1 @ o4 $end
$upscope $end
$upscope $end
$scope module f3 $end
$var wire 1 L a $end
$var wire 1 M b $end
$var wire 1 N cin $end
$var wire 5 O t [4:0] $end
$var wire 1 P sum $end
$var wire 1 Q cout $end
$scope module a0 $end
$var wire 1 L i0 $end
$var wire 1 M i1 $end
$var wire 1 R o2 $end
$upscope $end
$scope module a1 $end
$var wire 1 L i0 $end
$var wire 1 N i1 $end
$var wire 1 S o2 $end
$upscope $end
$scope module a2 $end
$var wire 1 M i0 $end
$var wire 1 N i1 $end
$var wire 1 T o2 $end
$upscope $end
$scope module o0 $end
$var wire 1 U i0 $end
$var wire 1 V i1 $end
$var wire 1 W o3 $end
$upscope $end
$scope module o1 $end
$var wire 1 X i0 $end
$var wire 1 Y i1 $end
$var wire 1 Q o3 $end
$upscope $end
$scope module x0 $end
$var wire 1 L i0 $end
$var wire 1 M i1 $end
$var wire 1 Z o4 $end
$upscope $end
$scope module x1 $end
$var wire 1 [ i0 $end
$var wire 1 N i1 $end
$var wire 1 P o4 $end
$upscope $end
$upscope $end
$scope module f4 $end
$var wire 1 \ a $end
$var wire 1 ] b $end
$var wire 1 ^ cin $end
$var wire 5 _ t [4:0] $end
$var wire 1 ` sum $end
$var wire 1 " cout $end
$scope module a0 $end
$var wire 1 \ i0 $end
$var wire 1 ] i1 $end
$var wire 1 a o2 $end
$upscope $end
$scope module a1 $end
$var wire 1 \ i0 $end
$var wire 1 ^ i1 $end
$var wire 1 b o2 $end
$upscope $end
$scope module a2 $end
$var wire 1 ] i0 $end
$var wire 1 ^ i1 $end
$var wire 1 c o2 $end
$upscope $end
$scope module o0 $end
$var wire 1 d i0 $end
$var wire 1 e i1 $end
$var wire 1 f o3 $end
$upscope $end
$scope module o1 $end
$var wire 1 g i0 $end
$var wire 1 h i1 $end
$var wire 1 " o3 $end
$upscope $end
$scope module x0 $end
$var wire 1 \ i0 $end
$var wire 1 ] i1 $end
$var wire 1 i o4 $end
$upscope $end
$scope module x1 $end
$var wire 1 j i0 $end
$var wire 1 ^ i1 $end
$var wire 1 ` o4 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0j
0i
0h
0g
0f
0e
0d
0c
0b
0a
0`
b0 _
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
b0 O
0N
0M
0L
0K
0J
0I
0H
0G
0F
0E
0D
0C
0B
0A
0@
b0 ?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
b0 /
0.
0-
b0 ,
b0 +
b0 *
b0 )
b0 (
1'
b0 &
b0 %
0$
0#
0"
b0 !
$end
#50
1$
#100
0$
#125
0'
#150
1$
#160
b1 !
b1 +
10
1;
b1 /
1:
1.
b1 (
b1 &
b1 *
#200
0$
#250
1$
#260
1@
1>
b1 ,
11
19
17
b10 !
b10 +
00
15
0;
12
b10010 /
0:
1-
b10 (
b1 %
b1 )
#300
0$
#350
1$
#360
1`
1^
1Q
1Y
1W
1V
1S
1N
b111 ,
1A
1I
1G
0@
b1000 !
b1000 +
0P
1F
1K
1[
1C
b10101 ?
1J
b10101 O
1Z
1<
1L
b11 (
b111 %
b111 )
#400
0$
#450
1$
#460
0`
0^
0Q
1P
0N
0A
1@
0>
b0 ,
01
09
0I
0Y
07
b111 !
b111 +
10
0G
0W
05
1;
0F
0V
0H
0X
02
b1 /
1:
0C
0S
b1 ?
0D
b1 O
0T
0-
0<
0L
1=
1M
b100 (
b0 %
b0 )
b111 &
b111 *
#500
0$
#550
1$
#560
1V
1X
1S
1T
1`
1N
1^
1A
1Q
1F
1H
1I
1Y
1C
1D
1G
1W
1P
1>
1E
0K
1U
0[
b111 ,
11
1B
b11110 ?
0J
1R
b11110 O
0Z
18
1<
1L
b1001 /
14
b1110 !
b1110 +
00
b101 (
b110 %
b110 )
1#
#600
0$
#650
1$
#660
0^
b11 ,
0Q
19
0Y
17
10
0@
0W
0"
b1101 !
b1101 +
1`
15
16
0;
0V
0E
0H
1K
0U
0X
0g
1j
12
13
b11110 /
0:
0S
0B
0D
b10101 ?
1J
0R
b0 O
0T
0c
b1 _
1i
1-
0L
0=
0M
1]
b110 (
b11 %
b11 )
b1001 &
b1001 *
#700
0$
#750
1$
#760
1"
1h
1f
1e
b10101 _
1b
0`
1^
b111 ,
1Q
1Y
1W
b1 !
b1 +
0P
1V
1[
1S
b10101 O
1Z
1L
1\
0]
b111 (
b1111 %
b1111 )
b1 &
b1 *
#800
0$
#850
1$
#860
0"
0h
0f
1`
1@
1P
0e
0j
1E
1H
0K
1U
1X
0[
0b
b0 _
0i
1B
1D
b11110 ?
0J
1R
1T
b11110 O
0Z
06
08
0\
1=
1M
03
b10010 /
04
b1110 !
b1110 +
00
b1000 (
b111 %
b111 )
b111 &
b111 *
0#
#900
0$
#950
1$
#1000
0$
#1050
1$
#1100
0$
#1150
1$
#1200
0$
#1250
1$
#1300
0$
#1350
1$
#1400
0$
#1450
1$
#1500
0$
#1550
1$
#1600
0$
#1650
1$
#1700
0$
#1750
1$
#1800
0$
#1850
1$
#1860
